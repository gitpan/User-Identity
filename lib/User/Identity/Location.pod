
=head1 NAME

User::Identity::Location - physical location of a person


=head1 INHERITANCE

 User::Identity::Location
   is a User::Identity::Collection::Item
   is a User::Identity::Item


=head1 SYNOPSIS

 use User::Identity;
 use User::Identity::Location;
 my $me   = User::Identity->new(...);
 my $addr = User::Identity::Location->new(...);
 $me->add(location => $addr);

 # Simpler

 use User::Identity;
 my $me   = User::Identity->new(...);
 my $addr = $me->add(location => ...);


=head1 DESCRIPTION

The C<User::Identity::Location> object contains the description of a physical
location of a person: home, work, travel.  The locations are collected
by a L<User::Identity::Collection::Locations|User::Identity::Collection::Locations> object.

Nearly all methods can return C<undef>.  Some methods produce language or
country specific output.



=head1 METHODS


=head2 Initiation


User::Identity::Location-E<gt>B<new>([NAME], OPTIONS)

=over 4

Create a new location.  You can specify a name as first argument, or
in the OPTION list.  Without a specific name, the organization is used as name.

 Option        Defined in       Default   
 country                        undef     
 country_code                   undef     
 description   L<User::Identity::Item>  undef     
 fax                            undef     
 name          L<User::Identity::Item>  <required>
 organization                   undef     
 pobox                          undef     
 pobox_pc                       undef     
 postal_code                    undef     
 state                          undef     
 street                         undef     
 telephone                      undef     
 user          L<User::Identity::Collection::Item>  undef     

. country STRING

. country_code STRING

. description STRING

. fax STRING|ARRAY

. name STRING

. organization STRING

. pobox STRING

. pobox_pc STRING

. postal_code STRING

. state STRING

. street STRING

. telephone STRING|ARRAY

. user OBJECT

=back

=head2 Attributes


$obj-E<gt>B<city>

=over 4

The city where the address is located.

=back

$obj-E<gt>B<country>

=over 4

The country where the address is located.  If the name of the country is
not known but a country code is defined, the name will be looked-up
using Geography::Countries (if installed).

=back

$obj-E<gt>B<countryCode>

=over 4

Each country has an ISO standard abbreviation.  Specify the country or the
country code, and the other will be filled in automatically.

=back

$obj-E<gt>B<description>

=over 4

See L<User::Identity::Item/"Attributes">

=back

$obj-E<gt>B<fax>

=over 4

One or more fax numbers, like L<telephone()|User::Identity::Location/"Attributes">.

=back

$obj-E<gt>B<fullAddress>

=over 4

Create an address to put on a postal mailing, in the format as normal in
the country where it must go to.  To be able to achieve that, the country
code must be known.  If the city is not specified or no street or pobox is
given, undef will be returned: an incomplete address.

I<Example:> 

 print $uil->fullAddress;
 print $user->find(location => 'home')->fullAddress;

=back

$obj-E<gt>B<name>

=over 4

See L<User::Identity::Item/"Attributes">

=back

$obj-E<gt>B<organization>

=over 4

The organization (for instance company) which is related to this location.

=back

$obj-E<gt>B<pobox>

=over 4

Post Office mail box specification.  Use C<"P.O.Box 314">, not simple C<314>.

=back

$obj-E<gt>B<poboxPostalCode>

=over 4

The postal code related to the Post-Office mail box.  Defined by new() option
C<pobox_pc>.

=back

$obj-E<gt>B<postalCode>

=over 4

The postal code is very country dependent.  Also, the location of the
code within the formatted string is country dependent.

=back

$obj-E<gt>B<state>

=over 4

The state, which is important for some contries but certainly not for
the smaller ones.  Only set this value when you state has to appear on
printed addresses.

=back

$obj-E<gt>B<street>

=over 4

Returns the address of this location.  Since Perl 5.7.3, you can use
unicode in strings, so why not format the address nicely?

=back

$obj-E<gt>B<telephone>

=over 4

One or more phone numbers.  Please use the internation notation, which
starts with C<'+'>, for instance C<+31-26-12131>.  In scalar context,
only the first number is produced.  In list context, all numbers are
presented.

=back

$obj-E<gt>B<user>([USER])

=over 4

See L<User::Identity::Collection::Item/"Attributes">

=back








